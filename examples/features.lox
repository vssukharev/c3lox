
// Your first Lox program!
print "Hello World!";

// Data types
true;  // Not false
false; // Not *not* false

1234;  // An integer
12.34; // A decimal number

"I am string";
"";    // The empty string
"123"; // This is a string, not a number

nil;  // Nothing

// Expressions
add + me;
substract - me;
multiply * me;
divide / me;
-negateme;

less < than;
lessThan <= orEqual;
greater > than;
greaterThan >= orEqual;

1 == 2; // false
"cat" != "dog"; // true

314 == "pi"; // false
123 == "123"; // false

!true;  // false
!false; // true

true and false; // false
true and true;  // true

false or false; // false
false or true;  // true

var average = (min + max) / 2;

"some expression"; // expression statement (due to semi-colon in the end)

var imAVariable = "here is my value";
var iAmNil; 

var breakfast = "bagels";
print breakfast; // "bagels".
breakfast = "beignets";
print breakfast; // "beignets".


if (condition) {
  print "yes";
} else {
  print "no";
}

var a = 1;
while (a < 10) {
  print a;
  a = a + 1;
}

for (var a = 1; a < 10; a = a + 1) {
  print a;
}

makeBreakfast(bacon, eggs, toast);
makeBreakfast();

fun printSum(a, b) {
  print a + b;
}

fun returnSum(a, b) {
  return a + b;
}

fun addPair(a, b) {
  return a + b;
}

fun identity(a) {
  return a;
}

print identity(addPair)(1, 2); // "3"

fun outerFunction() {
  fun localFunction() {
    print "I'm local!";
  }

  localFunction();
}

fun returnFunction() {
  var outside = "outside";
  fun inner() {
    print outside;
  }
  return inner;
}

var fn = returnFunction();
fn();


class Breakfast {
  cook() {
    print "Egg a-fryin'!";
  }

  server(who) {
    print "Enjoy your breakfast, " + who + ".";
  }
}

// Store it
var someVariable = Breakfast;

// Pass it
someFunction(Breakfast);

var breakfast = Breakfast();
print breakfast; // "Breakfast instance"

breakfast.meat = "sausage";
breakfast.bread = "sourdough";

class Breakfast {
  serve(who) {
    print "Enjoy your " + this.meat + " and " + this.bread + ", " + who + ".";
  }

  init(meat, bread) {
    this.meat = meat;
    this.bread = bread;
  }
}

var baconAndToast = Breakfast("bacon", "toast");
baconAndToast.serve("Dear Reader");

class Brunch < Breakfast {
  drink() {
    print "How about a Bloody Mary?";
  }
  
  init(meat, bread, drink) {
    super.init(meat, bread); // super is referring to Breakfast class
    this.drink = drink;
  }
}

var benedict = Brunch("ham", "English muffin");
benedict.serve("Noble Reader");

